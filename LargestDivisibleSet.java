package com.practise;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class LargestDivisibleSet {
    private static List<Integer> largestDivisibleSubset(int[] nums) {

        int n = nums.length;
        int [] count = new int[n];
        int [] pre = new int[n];
        int max = 0, index = -1;
        Arrays.sort(nums);

        for (int i = 0; i < n; i++) {
            count[i] = 1;
            pre[i] = -1;

            for (int j = i-1; j >= 0; j--) {
                if(nums[i] % nums[j] == 0 && count[j] + 1 > count[i]) {
                    count[i] = count[j] + 1;
                    pre[i] = j;
                }
            }

            if(count[i] > max) {
                max = count[i];
                index = i;
            }
        }

        List<Integer> res = new ArrayList<>();
        while(index != -1) {
            res.add(nums[index]);
            index = pre[index];
        }
//        System.out.println("pre: ");
//        for (int i = 0; i < pre.length; i++) {
//            System.out.println(pre[i]);
//        }
//        System.out.println("count: ");
//        for (int i = 0; i < pre.length; i++) {
//            System.out.println(count[i]);
//        }
        return res;
    }



    public static void main(String[] args) {

//		int[] nums = { 472, 105, 328, 922, 963, 625, 827, 232, 913, 832, 730, 152, 697, 614, 570,
//		        639, 459, 895, 70, 488, 239, 596, 930, 402, 904, 197, 911, 126, 876, 535, 597, 332,
//		        863, 870, 646, 839, 878, 751, 528, 959, 929, 679, 7, 543, 248, 353, 494, 67, 841,
//		        732, 662, 122, 485, 565, 318, 747, 42, 545, 282, 638, 228, 496, 860, 874, 334, 556,
//		        103, 437, 83, 61, 365, 761, 259, 361, 64, 612, 206, 131, 452, 938, 144, 573, 774,
//		        243, 521, 102, 787, 154, 92, 15, 649, 951, 240, 506, 342, 770, 940, 135, 700, 820,
//		        393, 412, 884, 356, 618, 366, 807, 907, 861, 380, 32, 921, 622, 23, 760, 57, 466,
//		        416, 391, 273, 706, 512, 212, 998, 263, 279, 743, 27, 514, 98, 996, 231, 905, 902,
//		        91, 636, 285, 364, 609, 189, 738, 368, 203, 846, 6, 970, 210, 748, 594, 268, 157,
//		        726, 257, 419, 999, 797, 869, 96, 792, 451, 352, 693, 894, 987, 978, 595, 518, 346,
//		        315, 114, 900, 160, 119, 721, 218, 814, 988, 477, 66, 733, 740, 421, 537, 642, 178,
//		        882, 21, 337, 868, 350, 945, 815, 219, 290, 129, 684, 640, 155, 409, 712, 372, 222,
//		        848, 765, 932, 283, 14, 819, 544, 146, 425, 958, 644, 903, 458, 473, 85, 627, 845,
//		        641, 340, 198, 961, 456, 992, 495, 413, 170, 390, 559, 143, 166, 428, 100, 809, 647,
//		        354, 619, 435, 250, 837, 533, 530, 883, 948, 816, 432, 261, 623, 560, 503, 406, 916,
//		        147, 826, 277, 312, 253, 729, 251, 434, 443, 686, 683, 944, 186, 829, 898, 63, 457,
//		        405, 417, 811, 579, 957, 404, 532, 621, 8, 260, 445, 45, 887, 296, 728, 236, 591,
//		        447, 422, 696, 481, 893, 264, 974, 701, 714, 379, 12, 482, 541, 942, 385, 849, 345,
//		        469, 705, 527, 571, 799, 962, 650, 387, 552, 97, 808, 971, 242, 803, 36, 505, 777,
//		        89, 507, 52, 47, 436, 703, 716, 794, 229, 628, 108, 800, 779, 69, 449, 165, 973,
//		        897, 324, 943, 689, 917, 745, 76, 873, 164, 616, 9, 24, 237, 739, 892, 818, 718,
//		        351, 617, 420, 744, 314, 687, 956, 782, 781, 297, 424, 737, 912, 522, 272, 408, 369,
//		        645, 275, 611, 840, 382, 125, 890, 162, 568, 295, 349, 301, 997, 38, 908, 179, 333,
//		        439, 899, 329, 65, 159, 142, 121, 923, 247, 854, 802, 330, 335, 43, 843, 254, 137,
//		        954, 515, 790, 950, 566, 857, 490, 822, 519, 286, 150, 583, 796, 291, 941, 37, 742,
//		        723, 784, 976, 374, 780, 888, 569, 879, 805, 88, 468, 463, 969, 258, 877, 176, 564,
//		        654, 798, 789, 793, 401, 493, 557, 592, 202, 418, 115, 852, 462, 953, 717, 338, 480,
//		        981, 396, 634, 836, 681, 629, 935, 553, 540, 397, 665, 758, 817, 224, 821, 158, 968,
//		        323, 17, 3, 776, 177, 81, 906, 749, 344, 169, 140, 926, 118, 501, 927, 504, 598,
//		        875, 34, 643, 548, 813, 470, 508, 736, 602, 378, 59, 652, 994, 915, 249, 213, 661,
//		        450, 39, 267, 586, 55, 727, 25, 113, 141, 734, 972, 872, 300, 516, 526, 270, 112,
//		        555, 171, 766, 256, 127, 10, 316, 554, 194, 448, 657, 847, 174, 241, 620, 68, 562,
//		        426, 133, 265, 491, 909, 989, 168, 173, 167, 928, 41, 567, 986, 724, 658, 208, 699,
//		        709, 306, 933, 2, 653, 881, 298, 750, 577, 702, 319, 694, 394, 601, 651, 309, 16,
//		        310, 668, 486, 192, 136, 33, 856, 134, 563, 370, 358, 498, 593, 230, 484, 308, 851,
//		        235, 51, 551, 536, 980, 415, 810, 246, 307, 79, 221, 580, 576, 101, 438, 791, 455,
//		        673, 75, 610, 376, 44, 624, 399, 294, 271, 195, 725, 637, 78, 773, 806, 967, 163,
//		        871, 389, 453, 558, 925, 193, 467, 274, 371, 788, 599 };
        // int [] nums =
        // {472,105,328,922,963,625,827,232,913,832,730,152,697,614,57};
        //int [] nums = {849,61,224,453,433,257,282,93,826,441,164,854,195,506,628,916,197,340,482,305,721,412,542,719,947,333,472,48,514,168,64,362,580,288,814,364,544,448,809,888,972,927,434,830,554,349,26,894,682,966,594,36,540,556,508,587,69,27,651,782,958,290,596,321,185,395,129,258,634,184,67,737,415,11,982,597,692,190,915,335,81,470,842,668,538,868,670,320,825,311,267,497,495,13,626,752,646,430,935,63,24,73,5,426,764,304,967,31,638,400,500,831,419,390,698,88,874,398,679,370,244,691,347,996,688,776,751,657,932,614,14,710,730,317,28,760,306,427,611,136,845,352,284,58,681,90,277,132,126,624,171,253,905,273,443,914,205,408,489,243,293,600,900,720,211,35,564,562,219,848,326,880,767,54,899,531,131,421,784,694,578,949,898,985,875,163,469,455,425,368,526,635,754,442,549,324,641,226,951,520,992,356,242,887,158,663,545,599,605,583,71,119,891,573,610,451,363,892,686,532,296,988,51,344,529,582,940,543,603,836,201,33,135,103,895,346,897,79,955,249,318,238,355,769,615,695,254,953,783,971,325,925,575,125,111,428,566,505,263,648,217,994,886,231,503,593,999,287,521,723,676,473,857,998,716,533,922,795,107,8,174,513,436,285,447,653,630,890,860,484,210,768,203,235,792,270,65,462,673,464,846,101,334,780,286,718,762,175,577,245,138,901,867,571,161,714,280,106,592,778,968,413,420,746,225,153,883,372,62,422,281,265,358,209,206,677,621,181,367,437,978,530,693,683,417,547,183,609,689,463,823,440,861,745,1000,418,620,598,338,34,581,704,110,55,738,595,380,744,45,743,471,817,52,632,815,264,742,222,353,396,765,386,486,360,766,567,980,310,664,404,841,118,906,876,169,800,525,700,893,98,53,859,493,330,528,945,511,173,747,576,758,939,15,725,250,601,302,50,354,116,522,872,402,777,49,30,202,930,40,631,822,796,130,47,82,699,303,25,833,248,678,481,444,384,75,666,127,705,749,948,240,941,991,804,394,452,828,23,636,866,799,633,917,759,665,707,501,608,492,454,411,237,590,541,16,856,862,843,9,476,539,929,586,946,644,684,755,6,260,124,438,516,713,409,728,546,771,753,877,834,697,869,675,165,60,934,289,801,1,896,496,339,100,128,642,827,943,504,154,21,565,309,806,661,660,741,969,824,460,507,379,407,120,990,43,272,918,337,239,331,669,790,152,791,97,658,643,902,750,572,793,327,650,625,855,936,498,458,156,207,727,920,510,445,536,38,230,294,871,708,779,218,908,315,179,873,142,724,524,907,416,802,431,191,76,960,241,385,348,259,187,7,853,923,397,810,359,560,405,952,91,449,973,299,913,485,674,414,266,149,84,942,208,588,993,680,4,392,166,612,839,95,712,619,275,772,702,931,247,818,735,561,711,557,151,864};
        int [] nums = {1,4,7,8};
        List<Integer> n = largestDivisibleSubset(nums);
        System.out.println("REsult");
        n.forEach(k -> System.out.print(k + " "));

    }

}
